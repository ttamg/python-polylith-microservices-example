[tool.poetry]
name = "python-polylith-microservices-example"
version = "0.1.0"
description = "A demo microservices project in Python using the Polylith architecture and Poetry plugins"
authors = ["Matt Gosden <mdgosden@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "mousetrap/job_queue", from = "bases"},
    {include = "mousetrap/mongo_connection", from = "bases"},
    {include = "mousetrap/api", from = "bases"},
    {include = "mousetrap/fetch_data", from = "components"},
    {include = "mousetrap/process_data", from = "components"},
    {include = "mousetrap/start_fetch_worker", from = "components"},
    {include = "mousetrap/run_fetch_worker", from = "components"},
    {include = "mousetrap/run_processing_worker", from = "components"},
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.89.1"
pika = "^1.3.1"
faker = "^16.6.1"
pymongo = "^4.3.3"
uvicorn = "^0.20.0"


[tool.poetry.group.dev.dependencies]
pylint = "^2.15.10"
pytest = "^7.2.1"
black = "^22.12.0"
isort = "^5.11.4"
ipykernel = "^6.20.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
